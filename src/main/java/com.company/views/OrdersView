package com.company.views;

import com.company.MainApp;
import com.company.controllers.OrderController;
import com.company.models.Order;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.scene.control.*;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.VBox;

import java.sql.SQLException;
import java.time.LocalDate;

public class OrdersView {
    private final OrderController orderController;
    private final TableView<Order> tableView;

    public OrdersView(MainApp mainApp) throws SQLException {
        this.orderController = new OrderController();
        this.tableView = createOrdersTable();
    }

    private TableView<Order> createOrdersTable() {
        TableView<Order> table = new TableView<>();

        // Настройка колонок
        TableColumn<Order, Integer> idCol = new TableColumn<>("ID");
        idCol.setCellValueFactory(new PropertyValueFactory<>("id"));

        TableColumn<Order, LocalDate> dateCol = new TableColumn<>("Дата");
        dateCol.setCellValueFactory(cellData -> cellData.getValue().orderDateProperty());

        TableColumn<Order, String> statusCol = new TableColumn<>("Статус");
        statusCol.setCellValueFactory(new PropertyValueFactory<>("status"));

        table.getColumns().addAll(idCol, dateCol, statusCol);
        refreshTable();

        return table;
    }

    private void refreshTable() {
        ObservableList<Order> orders = FXCollections.observableArrayList(
                orderController.getAllOrders()
        );
        tableView.setItems(orders);
    }

    public VBox getView() {
        VBox layout = new VBox(10);
        Button refreshBtn = new Button("Обновить");
        refreshBtn.setOnAction(e -> refreshTable());

        layout.getChildren().addAll(tableView, refreshBtn);
        return layout;
    }
}
